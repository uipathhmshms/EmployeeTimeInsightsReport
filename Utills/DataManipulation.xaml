<Activity mc:Ignorable="sap sap2010" x:Class="DataManipulation" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:nhr="clr-namespace:NPOI.HSSF.Record;assembly=NPOI" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_dt_reportData" Type="InOutArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1179,756</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>DataManipulation_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>NPOI.HSSF.Record</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="DataManipulation" sap:VirtualizedContainerService.HintSize="634,741" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="scg:List(nhr:RowDataRecord)" Name="test" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtProcessed" />
      <Variable x:TypeArguments="sd:DataTable" Name="groupedData" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,127.5</av:PointCollection>
        <x:Double x:Key="Height">703.5</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID3</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">270,329.5</av:Point>
          <av:Size x:Key="ShapeSize">200,52</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">370,381.5 370,401.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" ColumnName="מחלקה" DataTable="[io_dt_reportData]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="SortDataTable_2" Order="Ascending" OutputDataTable="[io_dt_reportData]" SortOrder="Ascending" />
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">270,401.5</av:Point>
              <av:Size x:Key="ShapeSize">200,94</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">370,495.5 370,515.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="קיבוץ לפי מחלקה,קוד סוכן,שם סוכן" Code="Try&#xA;    ' Ensure DataTable is not empty&#xA;    If io_dt_reportData Is Nothing OrElse io_dt_reportData.Rows.Count = 0 Then&#xA;        Throw New Exception(&quot;DataTable is empty or not initialized.&quot;)&#xA;    End If&#xA;&#xA;    ' Debug: Print column names to verify their correctness&#xA;    Dim actualColumns As String = String.Join(&quot;, &quot;, io_dt_reportData.Columns.Cast(Of DataColumn).Select(Function(c) c.ColumnName))&#xA;    Console.WriteLine(&quot;Available Columns: &quot; &amp; actualColumns)&#xA;&#xA;    ' List of columns to check for duplicates (trim to remove extra spaces)&#xA;    Dim checkColumns As String() = {&quot;מחלקה&quot;, &quot;קוד סוכן&quot;, &quot;שם סוכן&quot;}.Select(Function(col) col.Trim()).ToArray()&#xA;&#xA;    ' Validate that all required columns exist&#xA;    For Each col In checkColumns&#xA;        If Not io_dt_reportData.Columns.Contains(col) Then&#xA;            Throw New Exception(&quot;Column '&quot; &amp; col &amp; &quot;' does not exist in DataTable. Available Columns: &quot; &amp; actualColumns)&#xA;        End If&#xA;    Next&#xA;&#xA;    ' Create a clone of the DataTable structure (without data)&#xA;    Dim dtClone As DataTable = io_dt_reportData.Clone()&#xA;&#xA;    ' HashSet to track seen values in the specific columns&#xA;    Dim seenValues As New HashSet(Of String)&#xA;&#xA;    ' Variables to track previous department and agent code&#xA;    Dim prevDept As String = &quot;&quot;&#xA;    Dim prevAgentCode As String = &quot;&quot;&#xA;&#xA;    ' Iterate through the original DataTable and modify values in the clone&#xA;    For Each row As DataRow In io_dt_reportData.Rows&#xA;        Try&#xA;            ' Create a new row for the clone&#xA;            Dim newRow As DataRow = dtClone.NewRow()&#xA;            newRow.ItemArray = CType(row.ItemArray.Clone(), Object()) ' Explicitly cast to Object()&#xA;&#xA;            ' Generate the key for duplicate check&#xA;            Dim key As String = String.Join(&quot;|&quot;, checkColumns.Select(Function(col) row(col).ToString()))&#xA;&#xA;            If seenValues.Contains(key) Then&#xA;                ' Replace duplicate values with empty string in the clone&#xA;                For Each col In checkColumns&#xA;                    newRow(col) = &quot;&quot;&#xA;                Next&#xA;            Else&#xA;                seenValues.Add(key)&#xA;            End If&#xA;&#xA;            ' Ensure &quot;מחלקה&quot; is only displayed for the first row of each department&#xA;            If newRow(&quot;מחלקה&quot;).ToString() = prevDept Then&#xA;                newRow(&quot;מחלקה&quot;) = &quot;&quot;&#xA;            Else&#xA;                prevDept = newRow(&quot;מחלקה&quot;).ToString()&#xA;            End If&#xA;&#xA;            ' Ensure &quot;קוד סוכן&quot; is only displayed for the first row of each agent&#xA;            If newRow(&quot;קוד סוכן&quot;).ToString() = prevAgentCode Then&#xA;                newRow(&quot;קוד סוכן&quot;) = &quot;&quot;&#xA;            Else&#xA;                prevAgentCode = newRow(&quot;קוד סוכן&quot;).ToString()&#xA;            End If&#xA;&#xA;            ' If this is a &quot;Total&quot; row, clear the &quot;קוד סוכן&quot; and &quot;מחלקה&quot; values&#xA;            If newRow(&quot;שם סוכן&quot;).ToString().ToLower().Contains(&quot;total&quot;) Then&#xA;                newRow(&quot;קוד סוכן&quot;) = &quot;&quot;&#xA;                newRow(&quot;מחלקה&quot;) = &quot;&quot;&#xA;            End If&#xA;&#xA;            ' Add the modified row to the cloned DataTable&#xA;            dtClone.Rows.Add(newRow)&#xA;        Catch innerEx As Exception&#xA;            ' Log inner exception for debugging&#xA;            Console.WriteLine(&quot;Error processing row: &quot; &amp; innerEx.Message)&#xA;        End Try&#xA;    Next&#xA;&#xA;    ' Assign the modified clone back to io_dt_reportData&#xA;    io_dt_reportData = dtClone&#xA;&#xA;Catch ex As Exception&#xA;    ' Log the exception for debugging in UiPath&#xA;    Console.WriteLine(&quot;Error in Invoke Code: &quot; &amp; ex.Message)&#xA;End Try&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="200,94" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_reportData">[io_dt_reportData]</InOutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">270,515.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:CommentOut sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="חישוב גרנאד טוטאל" Code="Try&#xA;    ' Ensure DataTable is not empty&#xA;    If io_dt_reportData Is Nothing OrElse io_dt_reportData.Rows.Count = 0 Then&#xA;        Throw New Exception(&quot;DataTable is empty or not initialized.&quot;)&#xA;    End If&#xA;&#xA;    ' Clone the DataTable structure for safe modifications&#xA;    Dim dtClone As DataTable = io_dt_reportData.Clone()&#xA;&#xA;    ' Copy all existing rows to the new DataTable&#xA;    For Each row As DataRow In io_dt_reportData.Rows&#xA;        dtClone.ImportRow(row)&#xA;    Next&#xA;&#xA;    ' Create Grand Total row&#xA;    Dim totalRow As DataRow = dtClone.NewRow()&#xA;    &#xA;    ' Set &quot;Grand Total&quot; row values&#xA;    totalRow(&quot;מחלקה&quot;) = &quot;Grand Total&quot;&#xA;    totalRow(&quot;קוד סוכן&quot;) = &quot;&quot;&#xA;    totalRow(&quot;שם סוכן&quot;) = &quot;&quot;&#xA;    totalRow(&quot;סוג חוזה&quot;) = &quot;&quot;&#xA;    totalRow(&quot;מס' חודש&quot;) = DBNull.Value ' Ensure it's not affecting calculations&#xA;&#xA;    ' Define numeric columns for aggregation&#xA;    Dim numericColumns As String() = {&#xA;        &quot;מס' שעות דיווח צפוי&quot;, &quot;מס' שעות דיווח בפועל&quot;, &quot;הפרש צפי מול דיווח&quot;,&#xA;        &quot;מס' שעות מחלה שדווחו&quot;, &quot;מס' שעות מחלה שנותרו&quot;, &quot;מס' שעות חופשה שדווחו&quot;,&#xA;        &quot;מס' שעות חופשה שנותרו&quot;, &quot;סך שעות לא חיוב&quot;, &quot;סך שעות חיוב&quot;&#xA;    }&#xA;&#xA;    ' Sum each numeric column using LINQ&#xA;    For Each col As String In numericColumns&#xA;        If dtClone.Columns.Contains(col) AndAlso dtClone.Columns(col).DataType Is GetType(Decimal) Then&#xA;            totalRow(col) = io_dt_reportData.AsEnumerable().&#xA;                Where(Function(r) Not IsDBNull(r(col))).&#xA;                Sum(Function(r) Convert.ToDecimal(r(col)))&#xA;        Else&#xA;            totalRow(col) = DBNull.Value ' Ensure safe assignment for non-numeric columns&#xA;        End If&#xA;    Next&#xA;&#xA;    ' Retrieve total non-billable and billable hours&#xA;    Dim totalNonBillable As Decimal = If(IsDBNull(totalRow(&quot;סך שעות לא חיוב&quot;)), 0D, Convert.ToDecimal(totalRow(&quot;סך שעות לא חיוב&quot;)))&#xA;    Dim totalBillable As Decimal = If(IsDBNull(totalRow(&quot;סך שעות חיוב&quot;)), 0D, Convert.ToDecimal(totalRow(&quot;סך שעות חיוב&quot;)))&#xA;    Dim totalHours As Decimal = totalNonBillable + totalBillable&#xA;&#xA;    ' Fix Percentage Calculations (Prevent Summation of Percentages)&#xA;    If totalHours &gt; 0 Then&#xA;        totalRow(&quot;סך שעות לא חיוב באחוזים&quot;) = Math.Round((totalNonBillable / totalHours) * 100, 2)&#xA;        totalRow(&quot;סך שעות חיוב באחוזים&quot;) = Math.Round((totalBillable / totalHours) * 100, 2)&#xA;    Else&#xA;        totalRow(&quot;סך שעות לא חיוב באחוזים&quot;) = 0D&#xA;        totalRow(&quot;סך שעות חיוב באחוזים&quot;) = 0D&#xA;    End If&#xA;&#xA;    ' Add the Grand Total row to the DataTable&#xA;    dtClone.Rows.Add(totalRow)&#xA;&#xA;    ' Assign back the modified DataTable to UiPath variable&#xA;    io_dt_reportData = dtClone&#xA;&#xA;Catch ex As Exception&#xA;    ' Log the exception for debugging in UiPath&#xA;    Console.WriteLine(&quot;Error in Invoke Code: &quot; &amp; ex.Message)&#xA;End Try&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_reportData">[io_dt_reportData]</InOutArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                  </Sequence>
                </ui:CommentOut.Body>
              </ui:CommentOut>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">270,257.5</av:Point>
          <av:Size x:Key="ShapeSize">200,52</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">370,309.5 370,329.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" ColumnName="שם סוכן" DataTable="[io_dt_reportData]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="SortDataTable_3" Order="Ascending" OutputDataTable="[io_dt_reportData]" SortOrder="Ascending" />
      <FlowStep.Next>
        <x:Reference>__ReferenceID0</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">40,528.5</av:Point>
          <av:Size x:Key="ShapeSize">200,83</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="חישוב גרנאד טוטאל" Code="Try&#xA;    ' Ensure DataTable is not empty&#xA;    If io_dt_reportData Is Nothing OrElse io_dt_reportData.Rows.Count = 0 Then&#xA;        Throw New Exception(&quot;DataTable is empty or not initialized.&quot;)&#xA;    End If&#xA;&#xA;    ' Clone the DataTable structure for safe modifications&#xA;    Dim dtClone As DataTable = io_dt_reportData.Clone()&#xA;&#xA;    ' Copy all existing rows to the new DataTable&#xA;    For Each row As DataRow In io_dt_reportData.Rows&#xA;        dtClone.ImportRow(row)&#xA;    Next&#xA;&#xA;    ' Calculate sum for numeric columns&#xA;    Dim totalRow As DataRow = dtClone.NewRow()&#xA;    &#xA;    ' Set &quot;Grand Total&quot; row values&#xA;    totalRow(&quot;מחלקה&quot;) = &quot;Grand Total&quot;&#xA;    totalRow(&quot;קוד סוכן&quot;) = &quot;&quot;&#xA;    totalRow(&quot;שם סוכן&quot;) = &quot;&quot;&#xA;    totalRow(&quot;סוג חוזה&quot;) = &quot;&quot;&#xA;    &#xA;    ' Assign DBNull safely for month column&#xA;    If dtClone.Columns(&quot;מס' חודש&quot;).DataType Is GetType(Integer) Then&#xA;        totalRow(&quot;מס' חודש&quot;) = 0 ' If Integer, use 0 instead of DBNull&#xA;    Else&#xA;        totalRow(&quot;מס' חודש&quot;) = DBNull.Value&#xA;    End If&#xA;&#xA;    ' Define numeric columns for aggregation&#xA;    Dim numericColumns As String() = {&quot;מס' שעות דיווח צפוי&quot;, &quot;מס' שעות דיווח בפועל&quot;, &quot;הפרש צפי מול דיווח&quot;, &#xA;                                       &quot;מס' שעות מחלה שדווחו&quot;, &quot;מס' שעות מחלה שנותרו&quot;, &quot;מס' שעות חופשה שדווחו&quot;, &#xA;                                       &quot;מס' שעות חופשה שנותרו&quot;, &quot;סך שעות לא חיוב&quot;, &quot;סך שעות חיוב&quot;}&#xA;&#xA;    ' Sum each numeric column using LINQ&#xA;    For Each col As String In numericColumns&#xA;        If dtClone.Columns.Contains(col) AndAlso dtClone.Columns(col).DataType Is GetType(Decimal) Then&#xA;            totalRow(col) = io_dt_reportData.AsEnumerable().Sum(Function(r) If(IsDBNull(r(col)), 0D, Convert.ToDecimal(r(col))))&#xA;        Else&#xA;            totalRow(col) = DBNull.Value ' If not numeric, ensure safe assignment&#xA;        End If&#xA;    Next&#xA;&#xA;    ' Calculate percentages safely&#xA;    Dim totalNonBillable As Decimal = If(IsDBNull(totalRow(&quot;סך שעות לא חיוב&quot;)), 0D, Convert.ToDecimal(totalRow(&quot;סך שעות לא חיוב&quot;)))&#xA;    Dim totalBillable As Decimal = If(IsDBNull(totalRow(&quot;סך שעות חיוב&quot;)), 0D, Convert.ToDecimal(totalRow(&quot;סך שעות חיוב&quot;)))&#xA;    Dim totalHours As Decimal = totalNonBillable + totalBillable&#xA;&#xA;    ' Prevent division by zero and assign calculated percentages&#xA;    If totalHours &gt; 0 Then&#xA;        totalRow(&quot;סך שעות לא חיוב באחוזים&quot;) = Math.Round((totalNonBillable / totalHours) * 100, 2)&#xA;        totalRow(&quot;סך שעות חיוב באחוזים&quot;) = Math.Round((totalBillable / totalHours) * 100, 2)&#xA;    Else&#xA;        totalRow(&quot;סך שעות לא חיוב באחוזים&quot;) = DBNull.Value&#xA;        totalRow(&quot;סך שעות חיוב באחוזים&quot;) = DBNull.Value&#xA;    End If&#xA;&#xA;    ' Add the Grand Total row to the DataTable&#xA;    dtClone.Rows.Add(totalRow)&#xA;&#xA;    ' Assign back the modified DataTable to UiPath variable&#xA;    io_dt_reportData = dtClone&#xA;&#xA;Catch ex As Exception&#xA;    ' Log the exception for debugging in UiPath&#xA;    Console.WriteLine(&quot;Error in Invoke Code: &quot; &amp; ex.Message)&#xA;End Try&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
        <ui:InvokeCode.Arguments>
          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_reportData">[io_dt_reportData]</InOutArgument>
        </ui:InvokeCode.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeCode>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,127.5</av:Point>
          <av:Size x:Key="ShapeSize">200,94</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:Comment sap:VirtualizedContainerService.HintSize="200,94" sap2010:WorkflowViewState.IdRef="Comment_1" Text="את כל הלוגיקה הזאת ביצעתי בסוף כחלק מהפרוצדורה&#xD;&#xA;" />
    </FlowStep>
  </Flowchart>
</Activity>